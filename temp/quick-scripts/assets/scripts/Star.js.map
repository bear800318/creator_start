{"version":3,"sources":["Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","scoreDisplay","default","type","Label","getPlayerDistance","playerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","creatNewStar","gainScore","destroy","update","dt","playScoreAnime","x","y","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACPC,WAASF,GAAGG,SADL;;AAGPC,cAAY;AACV;AACAC,gBAAY,CAFF;;AAIVC,kBAAc;AACZC,eAAS,IADG;AAEZC,YAAMR,GAAGS;AAFG;AAJJ,GAHL;;AAaPC,qBAAmB,6BAAW;AAC5B;AACA,QAAIC,YAAY,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAhB;AACA;AACA,QAAIC,OAAO,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAX;AACA,WAAOJ,IAAP;AACD,GAnBM;;AAqBPK,YAAU,oBAAW;AACnB;AACA,SAAKR,IAAL,CAAUS,YAAV;AACA;AACA,SAAKT,IAAL,CAAUU,SAAV;AACA;AACA,SAAKN,IAAL,CAAUO,OAAV;AACD,GA5BM;;AA8BPC,UAAQ,gBAASC,EAAT,EAAa;AACnB;AACA,QAAI,KAAKf,iBAAL,KAA2B,KAAKL,UAApC,EAAgD;AAC9C;AACA,WAAKO,IAAL,CAAUc,cAAV,CAAyB,KAAKV,IAAL,CAAUW,CAAnC,EAAsC,KAAKX,IAAL,CAAUY,CAAhD;AACA,WAAKR,QAAL;AACA;AACD;;AAED;AACA,QAAIS,eAAe,IAAI,KAAKjB,IAAL,CAAUkB,KAAV,GAAkB,KAAKlB,IAAL,CAAUmB,YAAnD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKhB,IAAL,CAAUiB,OAAV,GACED,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CADf;AAED;AA5CM,CAAT","file":"Star.js","sourceRoot":"..\\..\\..\\..\\assets\\scripts","sourcesContent":["cc.Class({\n  extends: cc.Component,\n\n  properties: {\n    // 星星和主角之间的距离小于这个数值时，就会完成收集\n    pickRadius: 0,\n\n    scoreDisplay: {\n      default: null,\n      type: cc.Label\n    }\n  },\n\n  getPlayerDistance: function() {\n    // 根据 player 节点位置判断距离\n    let playerPos = this.game.player.getPosition();\n    // 根据两点位置计算两点之间距离\n    let dist = this.node.position.sub(playerPos).mag();\n    return dist;\n  },\n\n  onPicked: function() {\n    // 当星星被收集时，调用 Game 脚本中的接口，生成一个新的星星\n    this.game.creatNewStar();\n    // 调用 Game 脚本的得分方法\n    this.game.gainScore();\n    // 然后销毁当前星星节点\n    this.node.destroy();\n  },\n\n  update: function(dt) {\n    // 每帧判断和主角之间的距离是否小于收集距离\n    if (this.getPlayerDistance() < this.pickRadius) {\n      // 调用收集行为\n      this.game.playScoreAnime(this.node.x, this.node.y);\n      this.onPicked();\n      return;\n    }\n\n    // 根据 Game 脚本中的计时器更新星星的透明度\n    let opacityRatio = 1 - this.game.timer / this.game.starDuration;\n    let minOpacity = 50;\n    this.node.opacity =\n      minOpacity + Math.floor(opacityRatio * (255 - minOpacity));\n  }\n});\n"]}